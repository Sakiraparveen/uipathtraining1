<Activity mc:Ignorable="sap sap2010" x:Class="EmailAutomation1" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="EmailAutomation1_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umae="clr-namespace:UiPath.Mail.Activities.Enums;assembly=UiPath.Mail.Activities" xmlns:umame="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Enums;assembly=UiPath.Mail.Activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Business.ForEachMail</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Models</x:String>
      <x:String>UiPath.GSuite.Models</x:String>
      <x:String>UiPath.Shared.Api.Google.Gmail.Models</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Filters</x:String>
      <x:String>UiPath.GSuite.Activities.Filters</x:String>
      <x:String>UiPath.GSuite.Gmail.Enums</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Enums</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Enums</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
      <x:String>UiPath.Shared.Services.Graph.Mail.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365</x:String>
      <x:String>UiPath.Shared.Api.Google.Gmail.Contracts</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>DocumentFormat.OpenXml.Wordprocessing</x:String>
      <x:String>DocumentFormat.OpenXml</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="EmailAutomation1" sap:VirtualizedContainerService.HintSize="938,3774.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="emailList" />
      <Variable x:TypeArguments="snm:MailMessage" Name="Item" />
      <Variable x:TypeArguments="sd:DataTable" Name="EmpDetails" />
      <Variable x:TypeArguments="sd:DataTable" Name="datatable" />
      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="attachments">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="SourceIdRef">SaveMailAttachments_2</x:String>
            <x:String x:Key="SourcePropertyName">Attachments</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="EmailAutomation" sap:VirtualizedContainerService.HintSize="560,3752" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="526,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Email Automation Process Started&quot;]" />
      <ui:GetIMAPMailMessages ClientName="{x:Null}" ClientVersion="{x:Null}" DeleteMessages="{x:Null}" FilterExpression="{x:Null}" MarkAsRead="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Validating email address" ConnectionMode="LegacyConfiguration" DisplayName="Get IMAP Email List" Email="sakiraparveen@gmail.com" EnableSSL="True" FilterExpressionCharacterSet="US-ASCII" sap:VirtualizedContainerService.HintSize="526,207.33333333333334" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_1" IgnoreCRL="False" MailFolder="Inbox" Messages="[emailList]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Password="gali orbm nhar aehz" Port="993" SecureConnection="Auto" Server="imap.gmail.com" Top="1" UseISConnection="False" UseOAuth="False">
        <ui:GetIMAPMailMessages.ConnectionDetailsBackupSlot>
          <usau:BackupSlot x:TypeArguments="umae:ConnectionDetails" StoredValue="LegacyConfiguration">
            <usau:BackupSlot.BackupValues>
              <scg:List x:TypeArguments="x:Object" x:Key="IntegrationService" Capacity="1">
                <x:String>e54591f6-9702-4ac3-99a1-d9dc8db2a12c</x:String>
              </scg:List>
            </usau:BackupSlot.BackupValues>
          </usau:BackupSlot>
        </ui:GetIMAPMailMessages.ConnectionDetailsBackupSlot>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetIMAPMailMessages>
      <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop Through Each MailMessage In The List " DisplayName="For Each currentMailMessage" sap:VirtualizedContainerService.HintSize="526,3285.3333333333335" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[emailList]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="snm:MailMessage">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="currentMailMessage" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="524,3132" sap2010:WorkflowViewState.IdRef="Sequence_32">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap2010:Annotation.AnnotationText="Mail Without Attachment" Condition="[emailList.Count = 0]" sap:VirtualizedContainerService.HintSize="490,3072" sap2010:WorkflowViewState.IdRef="If_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="488,370" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" ResourceAttachmentList="{x:Null}" ResourceAttachments="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Mail Forward To Without Attachment" AttachmentInputMode="Existing" Body="&quot;Mail Doesnot have any attachment&quot;" ConnectionMode="LegacyConfiguration" ContinueOnError="False" DisplayName="Send SMTP Email" Email="sakiraparveen@gmail.com" EnableSSL="True" From="sakiraparveen@gmail.com" sap:VirtualizedContainerService.HintSize="454,310" sap2010:WorkflowViewState.IdRef="SendMail_2" IgnoreCRL="False" IsBodyHtml="False" MailMessage="[Item]" Name="sakira" Password="ulcv zycq sixx wjft" Port="465" ReplyTo="sakiraparveen1990@gmail.com" SecureConnection="Auto" Server="smtp.gmail.com" Subject="No Attachment" To="sakiraparveen1990@gmail.com" UseISConnection="False" UseOAuth="False">
                      <ui:SendMail.AttachmentsBackup>
                        <usau:BackupSlot x:TypeArguments="umame:AttachmentInputMode" StoredValue="Existing">
                          <usau:BackupSlot.BackupValues>
                            <scg:Dictionary x:TypeArguments="umame:AttachmentInputMode, scg:List(x:Object)" />
                          </usau:BackupSlot.BackupValues>
                        </usau:BackupSlot>
                      </ui:SendMail.AttachmentsBackup>
                      <ui:SendMail.ConnectionDetailsBackupSlot>
                        <usau:BackupSlot x:TypeArguments="umae:ConnectionDetails" StoredValue="LegacyConfiguration">
                          <usau:BackupSlot.BackupValues>
                            <scg:List x:TypeArguments="x:Object" x:Key="IntegrationService" Capacity="1">
                              <x:String>e54591f6-9702-4ac3-99a1-d9dc8db2a12c</x:String>
                            </scg:List>
                            <scg:List x:TypeArguments="x:Object" x:Key="LegacyConfiguration" Capacity="7">
                              <x:Null />
                              <x:Null />
                              <x:Null />
                              <x:Null />
                              <x:Null />
                              <x:Null />
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </scg:List>
                          </usau:BackupSlot.BackupValues>
                        </usau:BackupSlot>
                      </ui:SendMail.ConnectionDetailsBackupSlot>
                      <ui:SendMail.Files>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                      </ui:SendMail.Files>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:SendMail>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="488,2540.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="454,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Has Attachment&quot;]" />
                    <If sap2010:Annotation.AnnotationText="Mail with PDF attachment" Condition="[emailList.Any(Function(mail) mail.From.Address = &quot;isfumtech@gmail.com&quot; AndAlso mail.Attachments.OfType(Of System.Net.Mail.Attachment)().Any(Function(a) a.Name.ToLower().EndsWith(&quot;.pdf&quot;)))]" sap:VirtualizedContainerService.HintSize="454,2304" sap2010:WorkflowViewState.IdRef="If_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="452,370" sap2010:WorkflowViewState.IdRef="Sequence_27">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" ResourceAttachmentList="{x:Null}" ResourceAttachments="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Mail Forwarding with PDF Attachment" AttachmentInputMode="Existing" Body="&quot;Unable to process mail because of pdf attachment in mail&quot;" ConnectionMode="LegacyConfiguration" DisplayName="Sent SMTP Mail" Email="sakiraparveen@gmail.com" EnableSSL="True" From="sakiraparveen@gmail.com" sap:VirtualizedContainerService.HintSize="418,310" sap2010:WorkflowViewState.IdRef="SendMail_4" IgnoreCRL="False" IsBodyHtml="False" MailMessage="[item]" Name="sakira" Password="ulcv zycq sixx wjft" Port="465" ReplyTo="sakiraparveen1990@gmail.com" SecureConnection="Auto" Server="smtp.gmail.com" Subject="PDF Attachment In Mail" To="sakiraparveen1990@gmail.com" UseISConnection="False" UseOAuth="False">
                            <ui:SendMail.AttachmentsBackup>
                              <usau:BackupSlot x:TypeArguments="umame:AttachmentInputMode" StoredValue="Existing">
                                <usau:BackupSlot.BackupValues>
                                  <scg:Dictionary x:TypeArguments="umame:AttachmentInputMode, scg:List(x:Object)" />
                                </usau:BackupSlot.BackupValues>
                              </usau:BackupSlot>
                            </ui:SendMail.AttachmentsBackup>
                            <ui:SendMail.ConnectionDetailsBackupSlot>
                              <usau:BackupSlot x:TypeArguments="umae:ConnectionDetails" StoredValue="LegacyConfiguration">
                                <usau:BackupSlot.BackupValues>
                                  <scg:List x:TypeArguments="x:Object" x:Key="IntegrationService" Capacity="1">
                                    <x:String>a0926a38-feef-4769-8d19-c2856e3f2820</x:String>
                                  </scg:List>
                                </usau:BackupSlot.BackupValues>
                              </usau:BackupSlot>
                            </ui:SendMail.ConnectionDetailsBackupSlot>
                            <ui:SendMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendMail.Files>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SendMail>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="452,1772.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_28">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="418,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Mail Does Not Have PDF&quot;]" />
                          <If sap2010:Annotation.AnnotationText="Mail With Excel Attachment" Condition="[currentMailMessage.Attachments.Any(Function(a) a.Name.EndsWith(&quot;.xlsx&quot;) OrElse a.Name.EndsWith(&quot;.xls&quot;))]" sap:VirtualizedContainerService.HintSize="418,1536" sap2010:WorkflowViewState.IdRef="If_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,1147.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:SaveMailAttachments ResourceAttachments="{x:Null}" sap2010:Annotation.AnnotationText="Excel Sheet Saved To Documents" Attachments="[attachments]" DisplayName="Save Email Attachments" ExcludeInlineAttachments="False" FolderPath="\Documents" sap:VirtualizedContainerService.HintSize="382,260" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_2" Message="[emailList(0)]" OverwriteExisting="False">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SaveMailAttachments>
                                <ui:ReadRange Range="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" sap2010:Annotation.AnnotationText="Reading Sheet " DataTable="[datatable]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="382,150.66666666666666" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Employee Details" WorkbookPath="\Documents\RPAExcel.xlsx">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ReadRange>
                                <ui:FilterDataTable DataTable="[datatable]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="382,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[EmpDetails]" SelectColumnsMode="Remove">
                                  <ui:FilterDataTable.Filters>
                                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                      <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                        <ui:FilterOperationArgument.Column>
                                          <InArgument x:TypeArguments="x:String">["Role in Company"]</InArgument>
                                        </ui:FilterOperationArgument.Column>
                                        <ui:FilterOperationArgument.Operand>
                                          <InArgument x:TypeArguments="x:String">["Analyst"]</InArgument>
                                        </ui:FilterOperationArgument.Operand>
                                      </ui:FilterOperationArgument>
                                      <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                        <ui:FilterOperationArgument.Column>
                                          <InArgument x:TypeArguments="x:String">["Role in Company"]</InArgument>
                                        </ui:FilterOperationArgument.Column>
                                        <ui:FilterOperationArgument.Operand>
                                          <InArgument x:TypeArguments="x:String">["IT Specialist"]</InArgument>
                                        </ui:FilterOperationArgument.Operand>
                                      </ui:FilterOperationArgument>
                                      <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                        <ui:FilterOperationArgument.Column>
                                          <InArgument x:TypeArguments="x:String">["Role in Company"]</InArgument>
                                        </ui:FilterOperationArgument.Column>
                                        <ui:FilterOperationArgument.Operand>
                                          <InArgument x:TypeArguments="x:String">["Scientist"]</InArgument>
                                        </ui:FilterOperationArgument.Operand>
                                      </ui:FilterOperationArgument>
                                    </scg:List>
                                  </ui:FilterDataTable.Filters>
                                  <ui:FilterDataTable.SelectColumns>
                                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                                      <x:Null />
                                    </scg:List>
                                  </ui:FilterDataTable.SelectColumns>
                                </ui:FilterDataTable>
                                <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[EmpDetails]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="382,148" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="sheet2" WorkbookPath="Documents\RPAExcel.xlsx" />
                                <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" ResourceAttachmentList="{x:Null}" ResourceAttachments="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" AttachmentInputMode="FilePaths" Body="Hi, Please find the excel sheet" ConnectionMode="LegacyConfiguration" DisplayName="Send SMTP Email" Email="sakiraparveen@gmail.com" EnableSSL="True" From="sakiraparveen@gmail.com" sap:VirtualizedContainerService.HintSize="382,332.6666666666667" sap2010:WorkflowViewState.IdRef="SendMail_5" IgnoreCRL="False" IsBodyHtml="False" MailMessage="[currentMailMessage]" Name="sakira" Password="ulcv zycq sixx wjft" Port="465" SecureConnection="Auto" Server="smtp.gmail.com" Subject="Excel Attachment" To="sakiraparveen1990@gmail.com" UseISConnection="False" UseOAuth="False">
                                  <ui:SendMail.AttachmentsBackup>
                                    <usau:BackupSlot x:TypeArguments="umame:AttachmentInputMode" StoredValue="FilePaths">
                                      <usau:BackupSlot.BackupValues>
                                        <scg:List x:TypeArguments="x:Object" x:Key="Existing" Capacity="1">
                                          <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)">["Documents\RPAExcel.xlsx"]</InArgument>
                                        </scg:List>
                                      </usau:BackupSlot.BackupValues>
                                    </usau:BackupSlot>
                                  </ui:SendMail.AttachmentsBackup>
                                  <ui:SendMail.ConnectionDetailsBackupSlot>
                                    <usau:BackupSlot x:TypeArguments="umae:ConnectionDetails" StoredValue="LegacyConfiguration">
                                      <usau:BackupSlot.BackupValues>
                                        <scg:List x:TypeArguments="x:Object" x:Key="IntegrationService" Capacity="1">
                                          <x:String>a0926a38-feef-4769-8d19-c2856e3f2820</x:String>
                                        </scg:List>
                                      </usau:BackupSlot.BackupValues>
                                    </usau:BackupSlot>
                                  </ui:SendMail.ConnectionDetailsBackupSlot>
                                  <ui:SendMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                      <InArgument x:TypeArguments="x:String">Documents\RPAExcel.xlsx</InArgument>
                                    </scg:List>
                                  </ui:SendMail.Files>
                                </ui:SendMail>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,227.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;The Mail Does Not Have An Excel File&quot;]" />
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
    </Sequence>
  </Sequence>
</Activity>